= form_for [@recipe], html: {id: "cake"} do |f|

  = render 'layouts/error_messages', model: f.object

  .recipe.clearfix
    .recipe-label
      = f.label :name
      %span.hissu.required 必須
    .recipe-input
      = f.text_field :name, placeholder: "例) クッキー", class: 'input-recipe'

  .recipe.clearfix
    .recipe-label
      = f.label :お菓子のカテゴリーを選択してください。
      %span.hissu.required 必須
    .recipe-select-wrapper
      .recipe-select-wrapper__box
        = f.select :category, @category_parent_array, {}, {class: 'recipe-select-wrapper__box--select', id: 'parent_category'} 
      
  .recipe.clearfix
    .recipe-label
      = f.label :difficulty_id
      %span.hissu.require 必須
    .recipe-input
      = f.collection_select :difficulty_id, Difficulty.all, :id, :name, prompt: true, class: "input-recipehash"

  .recipe.clearfix
    .recipe-label
      = f.label :servers
      %span.hissu.require 必須
    .recipe-input
      = f.text_field :servers, placeholder: "例) 4人分, 20個分", class: 'input-recipe'

  .recipe.clearfix
    .recipe-label
      = f.label :cookingtime
      %span.hissu.requere 必須
    .recipe-input
      = f.text_field :cookingtime, placeholder: "例) 1時間40分", class: 'input-recipe'

  .recipe.clearfix
    .recipe-label
      = f.label :restingtime
      %span.hissu.requere 必須
    .recipe-input
      = f.text_field :restingtime, placeholder: "例) 一日, なし", class: 'input-recipe'

  .recipe.clearfix
    .recipe-label
      = f.label :bakingtime
      %span.hissu.requere 必須
    .recipe-input
      = f.text_field :bakingtime, placeholder: "例) 10分", class: 'input-recipe'

  .recipe.clearfix
    .recipe-label
      = f.label :bakingtemperature
      %span.hissu.require 必須
    .recipe-input
      = f.text_field :bakingtemperature, placeholder: "例) 180℃, 蒸し器で蒸す", class: 'input-recipe'
      
  .recipe.clearfix
    .recipe-quantity
      このお菓子の材料と分量
      %span.hissu.require 必須
    %table
      %tbody 
        %tr
          %th 材料
          %th 分量
        = f.nested_fields_for :recipe_ingredients, wrapper_tag: :tr do |ff|
          %td= ff.text_field :ingredients, class: "form-ingredients", placeholder: "例) 全卵"
          %td= ff.text_field :quantity, class: "form-ingredients", placeholder: "例) ２個"
          %td= ff.remove_nested_fields_link '削除', data: { confirm: '本当に削除しますか?' }, class: "recipe-btn btn-ingredients__delete", role: "button"
    .botton-position
      = f.add_nested_fields_link :recipe_ingredients, '入力枠の追加', class: "recipe-btn btn-ingredients__add", role: "button"

  .recipe.clearfix
    .recipe-label
      = f.label :method
      %span.hissu.require 必須
    .recipe-input
      = f.text_area :method, placeholder: '例) 1...2...3...', rows: '8', class: "input-recipebig"

  .recipe.clearfix
    .recipe-label
      = f.label :cookingpoint
      %span.hissu.require 必須
    .recipe-input
      = f.text_area :cookingpoint, placeholder: '作業中に気をつけることを記述してください。', rows: '4', class: "input-recipebig"

  .recipe.clearfix
    .recipe-label
      = f.label :instruments
      %span.hissu.require 必須
    .recipe-input
      = f.text_area :instruments, placeholder: '例) ホイッパー、ボール、カード、ゴムベラ、鍋、波刃包丁、まな板、バット、天板、ベイキングシート、オーブン など。 特殊なものがあればぜひお書きください。', rows: '8', class: "input-recipebig"

  .recipe.clearfix
    .recipe-label
      .recipe-label__image
        = f.label :写真を投稿してください。複数投稿可。画像を添付していない入力枠は削除してください。
        %span.hissu.require 必須
    .recipe-input{id: "image-box"}
      .recipe-input__previews{id: "previews"}
        
        - if @recipe.persisted?
          - @recipe.recipe_images.each_with_index do |image, i|
            = image_tag recipe_images.image.url, data: { index: i }, width: "100", height: '100'

      = f.fields_for :recipe_images do |image|
        .js-file_group.clearfix{"data-index": "#{image.index}"}
          = image.file_field :image, accept: "image/*", class: "js-file"
          .js-remove 削除

          -# 投稿エラー時入力枠と内容の保持
          = image.hidden_field :image_cache 
          
        - if @recipe.persisted?
          = image.check_box :_destroy, data:{ index: image.index }, class: 'hidden-destroy'

      - if @recipe.persisted?
        .js-file_group{"data-index": "#{@recipe.recipe_images.count}"}
          = file_field_tag :image, name: "recipe[recipe_images_attributes][#{@recipe.recipe_images.count}][image]", class: 'js-file'
          .js-remove 削除

  .border-line

  .recipe.clearfix
    .recipe-label
      = f.label :動画を投稿してください。一本のみ可
      %span.ninni.require 任意
    .recipe-input
      = f.fields_for :recipe_video do |video|
        = video.file_field :video, accept: "video/*", class: "post-video", id: "upload-video"

        -# 投稿エラー時入力内容の保持
        = video.hidden_field :video_cache 

        = fa_icon "file-video-o", id: "video-icon", class: "video_choice"
        .video-cancel
          = video.check_box :remove_video
          投稿した動画を送信しない場合はチェック
      
  .recipe.clearfix
    .recipe-label
      = f.label :動画説明文
      %span.ninni.require 任意
    .recipe-input
      = f.fields_for :recipe_video do |video|
        = video.text_area :description, placeholder: "投稿した動画の解説を入力してください", rows: '4', class: "input-recipebig"

  .actions-recipe
    = f.submit "レシピを投稿する", class: 'account-btn', data: {disable_with: '投稿中...'}
